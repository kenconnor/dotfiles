FROM ubuntu:22.04 AS build-env
#RUN ln -sf /usr/share
RUN apt update \
 && apt install -y curl
RUN curl -OL https://github.com/neovim/neovim/releases/download/v0.10.1/nvim.appimage
RUN chmod u+x nvim.appimage && ./nvim.appimage  --appimage-extract

FROM osrf/ros:humble-desktop
COPY --from=build-env /squashfs-root /root/nvim-0.10.1
RUN ln -s /root/nvim-0.10.1/AppRun /usr/bin/nvim
RUN apt-get update && apt-get install --no-install-recommends -y \
    git \
    curl \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/*
RUN curl -sL install-node.vercel.app/lts | bash -s -- -y
RUN mkdir -p /root/.local/share
COPY .vim/dein/dein.toml /root/.config/nvim/dein.toml
#COPY .vim/coc-settings.json /root/.config/nvim/coc-settings.json
COPY .config/nvim/init.lua /root/.config/nvim/init.lua
RUN nvim +'CocInstall -sync coc-pyright' +qall
RUN nvim +'CocInstall -sync coc-clangd' +qall
RUN nvim +'CocCommand -sync clangd.install' +qall

# install latest clangd
RUN apt-get update && apt-get install --no-install-recommends -y \
    unzip \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/*
RUN version=$(curl -sI https://github.com/clangd/clangd/releases/latest | grep -i location | awk -F '/' '{print $NF}' | tr -d '\r') \
 && curl -L -o clangd-linux-${version}.zip https://github.com/clangd/clangd/releases/download/${version}/clangd-linux-${version}.zip \
 && mkdir -p ~/.config/coc/extensions/coc-clangd-data/install/${version}/ \
 && unzip clangd-linux-${version}.zip -d ~/.config/coc/extensions/coc-clangd-data/install/${version}/ \
 && rm clangd-linux-${version}.zip
